// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjetoV.database;

namespace ProjetoV.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20200905182106_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ProjetoV.Models.Campeonato", b =>
                {
                    b.Property<Guid>("CampeonatoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("NomeCampeonato")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<Guid>("TemporadaId")
                        .HasColumnType("char(36)");

                    b.HasKey("CampeonatoId");

                    b.HasIndex("TemporadaId");

                    b.ToTable("Campeonato");
                });

            modelBuilder.Entity("ProjetoV.Models.Clube", b =>
                {
                    b.Property<Guid>("ClubeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("ClubeCidade")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ClubeEstadio")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ClubeNome")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<Guid>("PartidaId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("TimeId")
                        .HasColumnType("char(36)");

                    b.HasKey("ClubeId");

                    b.HasIndex("PartidaId");

                    b.HasIndex("TimeId");

                    b.ToTable("Clubes");
                });

            modelBuilder.Entity("ProjetoV.Models.Gol", b =>
                {
                    b.Property<Guid>("GolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("MinutoGol")
                        .HasColumnType("datetime(6)");

                    b.HasKey("GolId");

                    b.ToTable("Gols");
                });

            modelBuilder.Entity("ProjetoV.Models.Jogador", b =>
                {
                    b.Property<Guid>("JogadorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("GolId")
                        .HasColumnType("char(36)");

                    b.Property<string>("NomeJogador")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<Guid>("TimeId")
                        .HasColumnType("char(36)");

                    b.Property<string>("User")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("JogadorId");

                    b.HasIndex("GolId");

                    b.HasIndex("TimeId");

                    b.ToTable("Jogadores");
                });

            modelBuilder.Entity("ProjetoV.Models.Partida", b =>
                {
                    b.Property<Guid>("PartidaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("DataHoraPartida")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("GolId")
                        .HasColumnType("char(36)");

                    b.Property<string>("LocalPartida")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("mandantePartida")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("placarFinal")
                        .HasColumnType("int");

                    b.HasKey("PartidaId");

                    b.HasIndex("GolId");

                    b.ToTable("Partidas");
                });

            modelBuilder.Entity("ProjetoV.Models.Rodada", b =>
                {
                    b.Property<Guid>("RodadaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("ClubeNome")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("DataFimRodada")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataInicioRodada")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("PartidaId")
                        .HasColumnType("char(36)");

                    b.HasKey("RodadaId");

                    b.HasIndex("PartidaId");

                    b.ToTable("Rodadas");
                });

            modelBuilder.Entity("ProjetoV.Models.Temporada", b =>
                {
                    b.Property<Guid>("TemporadaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ClubeId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Etapa")
                        .HasColumnType("int");

                    b.Property<Guid>("PartidaId")
                        .HasColumnType("char(36)");

                    b.HasKey("TemporadaId");

                    b.HasIndex("ClubeId");

                    b.HasIndex("PartidaId");

                    b.ToTable("Temporadas");
                });

            modelBuilder.Entity("ProjetoV.Models.Time", b =>
                {
                    b.Property<Guid>("TimeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("numero_jogador")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("posicao_jogador")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("TimeId");

                    b.ToTable("Times");
                });

            modelBuilder.Entity("ProjetoV.Models.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("longblob");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("longblob");

                    b.Property<string>("User")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ProjetoV.Models.Campeonato", b =>
                {
                    b.HasOne("ProjetoV.Models.Temporada", "Temporada")
                        .WithMany()
                        .HasForeignKey("TemporadaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProjetoV.Models.Clube", b =>
                {
                    b.HasOne("ProjetoV.Models.Partida", "Partida")
                        .WithMany()
                        .HasForeignKey("PartidaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetoV.Models.Time", "Time")
                        .WithMany()
                        .HasForeignKey("TimeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProjetoV.Models.Jogador", b =>
                {
                    b.HasOne("ProjetoV.Models.Gol", "Gol")
                        .WithMany()
                        .HasForeignKey("GolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetoV.Models.Time", "Time")
                        .WithMany()
                        .HasForeignKey("TimeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProjetoV.Models.Partida", b =>
                {
                    b.HasOne("ProjetoV.Models.Gol", "Gol")
                        .WithMany()
                        .HasForeignKey("GolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProjetoV.Models.Rodada", b =>
                {
                    b.HasOne("ProjetoV.Models.Partida", "Partida")
                        .WithMany()
                        .HasForeignKey("PartidaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProjetoV.Models.Temporada", b =>
                {
                    b.HasOne("ProjetoV.Models.Clube", "Clube")
                        .WithMany()
                        .HasForeignKey("ClubeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetoV.Models.Partida", "Partida")
                        .WithMany()
                        .HasForeignKey("PartidaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
